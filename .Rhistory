path.expand("~")
Sys.getenv("R_USER")
Sys.setenv(R_USER="C:/Users/russ_budden")
Sys.getenv("R_USER")
path.expand("~")
~/.Renviron
~.Renviron
library(blogdown)
new_site()
setwd("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul/blog")
new_site()
install_theme("kakawait/hugo-tranquilpeak-theme", theme_example = TRUE, update_config = TRUE)
serve_site()
serve_site()
serve_site()
serve_site()
load("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul/UK_constituencies/GE_map_workspace.RData")
setwd("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul")
library(rgdal)
library(maptools)
library(rgeos)
library(tidyverse)
library(leaflet)
library(ggthemes)
library(htmlwidgets)
library(broom)
library(OpenStreetMap)
library(ggmap)
uk <- readOGR(dsn = "UK_constituencies/uk_650_wpc_2017_full_res_v1.8.shp") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
ldn <- uk[uk$REGN == "London",]
num.dots.ldn <- select(ldn@data, CON:GREEN) / 100
sp.dfs.ldn <- lapply(names(num.dots.ldn), function(x) {
dotsInPolys(ldn, as.integer(num.dots.ldn[, x]), f="random")
})
dfs <- lapply(sp.dfs.ldn, function(x) {
data.frame(coordinates(x)[,1:2])
})
parties <- c("Conservative", "Labour", "Lib Dems", "UKIP", "Green")#, "SNP")
for (i in 1:length(parties)) {
dfs[[i]]$Party <- parties[i]
}
dots.final <- bind_rows(dfs) #%>%
#mutate(rand = runif(nrow(dots.final), min=0, max=1)) %>%
#arrange(rand)
dots.final$Party <- factor(dots.final$Party, levels = parties)
ldn.df <- tidy(ldn)
pal <- c("#0087DC", "#DC241F", "#FCBB30", "#70147A", "#78B943", "#FFFF00")
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'black')) +
coord_map()
ggplotmap
num.dots.ldn <- select(ldn@data, CON:GREEN) / 10
sp.dfs.ldn <- lapply(names(num.dots.ldn), function(x) {
dotsInPolys(ldn, as.integer(num.dots.ldn[, x]), f="random")
})
dfs <- lapply(sp.dfs.ldn, function(x) {
data.frame(coordinates(x)[,1:2])
})
parties <- c("Conservative", "Labour", "Lib Dems", "UKIP", "Green")#, "SNP")
for (i in 1:length(parties)) {
dfs[[i]]$Party <- parties[i]
}
dots.final <- bind_rows(dfs) #%>%
#mutate(rand = runif(nrow(dots.final), min=0, max=1)) %>%
#arrange(rand)
dots.final$Party <- factor(dots.final$Party, levels = parties)
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'black')) +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'black'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'black'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'black'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'white'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "#d3d3d3") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'white'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "black") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'white'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
geom_path(aes(long, lat, group = group), colour = "black") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'white'), legend.position = "none") +
coord_map()
ggplotmap
ggplotmap <- ggplot(ldn.df) +
geom_point(data = dots.final, aes(x, y, colour = Party), size = 0.01) +
#geom_path(aes(long, lat, group = group), colour = "black") +
#geom_text(data = centroids, aes(x, y, label = NAME), family = 'Roboto Condensed', size = 2) +
scale_colour_manual(values = pal) +
guides(colour = guide_legend(override.aes = list(alpha = 1, size = 3))) +
theme_map() +
theme(plot.background = element_rect(fill = 'white'), legend.position = "none") +
coord_map()
ggplotmap
library(Rfacebook)
library(tidyverse)
library(lubridate)
library(DT)
library(hrbrthemes)
library(ggalt)
library(ggbeeswarm)
library(gganimate)
library(animation)
library(plotly)
#fb_oauth <- fbOAuth(app_id="1081277011982944", app_secret="1d08b569b80059ff5d89985cdf8eeb5a",extended_permissions = TRUE)
#load("fb_oauth")
token <- 'EAACEdEose0cBAGZAc80RF6PWZBtcwhZCY64vHSNvt26hYI2NW0lPSx9cdeUibASBNZAiKV3XeINoikZAIP9L8sB2udO0fZCwBzqPfjdkHRvvkjVcSehwEu9zxKTf3yfTzDk9WCizzDXyZBW5QNKtOnYlMdjkKaRpedrTIugx0ciguJdTkPszdoqOb6MIxxwbDkZD'
group_id <- "593100907495019"
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
#period1 <- paste("1 january", 2015, sep = " ")
#period2 <- paste(day(Sys.Date()), tolower(months(as.Date(Sys.Date()))), 2017, sep = " ")
group_scrape <- function(token, group_id, limit) {
data_main <-  getGroup(group_id, token, feed = TRUE, n = limit)
get_link_names <- callAPI(paste0("https://graph.facebook.com/v2.9/", group_id,
"?fields=feed.limit(", limit, "){name}"), token)
link_names <- dplyr::bind_rows(lapply(get_link_names$feed$data, as.data.frame))
final <- merge(data_main, link_names, by = "id")
final <- final[complete.cases(final[,12]),] %>%
mutate(created_time = format.facebook.date(created_time),
link = paste0("<a href='",link,"' target='_blank'>","open link...","</a>"),
Date = as.Date(created_time, format = "%d/%m/%y"),
Month = make_date(year(created_time), month(created_time), 01),
Day = weekdays(created_time),
Hour = hour(created_time)) %>%
select(Date, Month, `Posted By` = from_name, Track = name, Day, Hour, Likes = likes_count,
Comments = comments_count, Link = link)
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
final$Day <- factor(final$Day, levels = days)
final$Track <- sapply(final$Track, function(row) iconv(row, "latin1", "ASCII", sub=""))
return(final)
}
tunes <- group_scrape(token, group_id, 1500)
dotdensity <- ggplot(tunes, aes(Hour, Day, colour = `Posted By`, text = Track)) +
geom_quasirandom() +
scale_color_brewer(palette = "Dark2") +
theme_ipsum_rc(grid = "X") +
#scale_x_date(date_labels = "%b %Y", date_breaks = "2 months") +
scale_x_continuous(breaks = 0:23) +
labs(y = "", x = "", title = "L'Enquête Corse", subtitle = "Post Density Over Time") +
theme(legend.position = "none")
ggplotly(dotdensity, tooltip = c("text"))
dotdensity <- ggplot(tunes, aes(Hour, Day, colour = `Posted By`, text = Track)) +
geom_beeswarm() +
scale_color_brewer(palette = "Dark2") +
theme_ipsum_rc(grid = "X") +
#scale_x_date(date_labels = "%b %Y", date_breaks = "2 months") +
scale_x_continuous(breaks = 0:23) +
labs(y = "", x = "", title = "L'Enquête Corse", subtitle = "Post Density Over Time") +
theme(legend.position = "none")
ggplotly(dotdensity, tooltip = c("text"))
dotdensity <- ggplot(tunes, aes(Hour, Day, colour = `Posted By`, text = Track)) +
geom_quasirandom() +
scale_color_brewer(palette = "Dark2") +
theme_ipsum_rc(grid = "X") +
#scale_x_date(date_labels = "%b %Y", date_breaks = "2 months") +
scale_x_continuous(breaks = 0:23) +
labs(y = "", x = "", title = "L'Enquête Corse", subtitle = "Post Density Over Time") +
theme(legend.position = "none")
ggplotly(dotdensity, tooltip = c("text"))
shiny::runApp('UK_constituencies/gedotmap')
runApp('UK_constituencies/gedotmap')
runApp('C:/Users/russ_budden/Dropbox (Culture of Insight)/Culture of Insight/ShinyApps/comscore/basic_app')
runApp('C:/Users/russ_budden/Dropbox (Culture of Insight)/Culture of Insight/ShinyApps/csvrecoder/csv_recoder')
setwd("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul/shiny _package_managed/csv_recoder")
packrat::on
packrat::on()
packrat::on()
packrat::status()
packrat::off()
shiny::runApp()
setwd("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul/UK_constituencies/gedotmap")
shiny::runApp()
