path.expand("~")
Sys.getenv("R_USER")
Sys.setenv(R_USER="C:/Users/russ_budden")
Sys.getenv("R_USER")
path.expand("~")
~/.Renviron
~.Renviron
setwd("C:/Users/russ_budden/Dropbox (Culture of Insight)/Paul/UK_constituencies/gedotmap")
packrat::on()
packrat::status()
uk <- readOGR(dsn = "uk_650_wpc_2017_low_res_v1.9/uk_650_wpc_2017_low_res_v1.9.shp") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
library(rgdal)
library(maptools)
library(rgeos)
library(tidyverse)
library(broom)
uk <- readOGR(dsn = "uk_650_wpc_2017_low_res_v1.9/uk_650_wpc_2017_low_res_v1.9.shp") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
selected.regions <- lapply(regions, function(x) {
region <- uk[uk$REGN == x,]
region@data$id <- row.names(region@data)
region.points <- fortify(region, region = "id")
region.df <- merge(region.points, region@data, by = "id")
})
regions <- c("East", "East Midlands", "London", "North East", "North West",
"Scotland", "South East", "South West", "Wales", "West Midlands",
"Yorkshire and The Humber")
selected.regions <- lapply(regions, function(x) {
region <- uk[uk$REGN == x,]
region@data$id <- row.names(region@data)
region.points <- fortify(region, region = "id")
region.df <- merge(region.points, region@data, by = "id")
})
names(selected.regions[[1]])
head(selected.regions[[1]])
selected.regions <- lapply(regions, function(x) {
region <- uk[uk$REGN == x,]
#region@data$id <- row.names(region@data)
#region.points <- fortify(region, region = "id")
#region.df <- merge(region.points, region@data, by = "id")
})
selected.regions <- lapply(regions, function(x) {
region <- uk[uk$REGN == x,]
region.df <- tidy(region)
#region@data$id <- row.names(region@data)
#region.points <- fortify(region, region = "id")
#region.df <- merge(region.points, region@data, by = "id")
})
head(selected.regions[[1]])
selected.regions <- lapply(regions, function(x) {
region <- uk[uk$REGN == x,]
#region.df <- tidy(region)
#region@data$id <- row.names(region@data)
#region.points <- fortify(region, region = "id")
#region.df <- merge(region.points, region@data, by = "id")
})
selected.regions[[1]]@plotOrder
